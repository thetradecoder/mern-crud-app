{"version":3,"sources":["components/navbar.component.js","components/addnewtask.component.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Component","AddTask","props","state","username","description","startdate","Date","deadline","onChangeUsername","bind","onChangeDescription","onChangeStartDate","onChangeDeadline","e","this","setState","target","value","taskheading","date","type","onChange","onChangeTaskHeading","selected","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uOAIqBA,E,uKAEb,OACA,yBAAKC,UAAU,+CACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gBAAvB,cACA,wBAAIA,UAAU,sBACV,wBAAIA,UAAU,YAAW,kBAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,YAA5B,cACzB,wBAAIA,UAAU,YAAW,kBAAC,IAAD,CAAMC,GAAG,YAAYD,UAAU,YAA/B,aACzB,wBAAIA,UAAU,YAAW,kBAAC,IAAD,CAAMC,GAAG,eAAeD,UAAU,YAAlC,iB,GARLE,a,yBCCfC,E,kDACjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAM,CACPC,SAAS,GACTC,YAAY,GACZC,UAAU,IAAIC,KACdC,SAAU,IAAID,MAGlB,EAAKE,iBAAkB,EAAKA,iBAAiBC,KAAtB,gBACvB,EAAKC,oBAAoB,EAAKA,oBAAoBD,KAAzB,gBACzB,EAAKE,kBAAmB,EAAKA,kBAAkBF,KAAvB,gBACxB,EAAKG,iBAAmB,EAAKA,iBAAiBH,KAAtB,gBAZV,E,6DAgBDI,GACbC,KAAKC,SAAS,CACVZ,SAASU,EAAEG,OAAOC,U,0CAGNJ,GAChBC,KAAKC,SAAS,CACVX,YAAYS,EAAEG,OAAOC,U,0CAGTJ,GAChBC,KAAKC,SAAS,CACVG,YAAYL,EAAEG,OAAOC,U,wCAGXE,GACdL,KAAKC,SAAS,CACVV,UAAUc,M,uCAGDA,GACbL,KAAKC,SAAS,CACVR,SAASY,M,+BAKb,OACI,yBAAKtB,UAAU,aACX,wBAAIA,UAAU,eAAd,gBACA,8BACI,yBAAKA,UAAU,cACX,6CACA,2BAAOuB,KAAK,OAAOvB,UAAU,eAAeoB,MAAOH,KAAKZ,MAAMC,SAAUkB,SAAUP,KAAKN,oBAE3F,yBAAKX,UAAU,cACX,+CACA,2BAAOuB,KAAK,OAAOvB,UAAU,eAAeoB,MAAOH,KAAKZ,MAAMgB,YAAaG,SAAUP,KAAKQ,uBAE9F,yBAAKzB,UAAU,cACX,+CACA,2BAAOuB,KAAK,OAAOvB,UAAU,eAAeoB,MAAOH,KAAKZ,MAAME,YAAaiB,SAAUP,KAAKJ,uBAE9F,yBAAKb,UAAU,cACX,8CADJ,IAC+B,6BAC3B,kBAAC,IAAD,CAAY0B,SAAUT,KAAKZ,MAAMG,UAAWgB,SAAUP,KAAKH,qBAE/D,yBAAKd,UAAU,cACX,4CAAwB,6BACxB,kBAAC,IAAD,CAAY0B,SAAUT,KAAKZ,MAAMK,SAAUc,SAAUP,KAAKF,0B,GAlE7Cb,aCctByB,MAVf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,wBAAI3B,UAAU,eAAd,sBAA+C,6BAA/C,wBACA,kBAAC,IAAD,CAAO4B,KAAK,YAAYC,UAAW1B,MCFrB2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.c2c9d82c.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default class Navbar extends Component{\r\n    render(){\r\n        return(\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <Link to=\"/\" className=\"navbar-brand\">TRADECODER</Link>\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\"><Link to=\"/todo/\" className=\"nav-link\">Todo List</Link></li>\r\n                <li className=\"nav-item\"><Link to=\"/todo/add\" className=\"nav-link\">Add Task</Link></li>\r\n                <li className=\"nav-item\"><Link to=\"/todo/signup\" className=\"nav-link\">Signup</Link></li>\r\n            </ul>\r\n        </nav>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport DatePicker from 'react-datepicker';\r\n\r\n\r\nexport default class AddTask extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            username:\"\",\r\n            description:\"\",\r\n            startdate:new Date(),\r\n            deadline: new Date()\r\n        }\r\n\r\n        this.onChangeUsername= this.onChangeUsername.bind(this);\r\n        this.onChangeDescription=this.onChangeDescription.bind(this);\r\n        this.onChangeStartDate= this.onChangeStartDate.bind(this);\r\n        this.onChangeDeadline = this.onChangeDeadline.bind(this);\r\n        \r\n\r\n    }\r\n    onChangeUsername(e){\r\n        this.setState({\r\n            username:e.target.value\r\n        })\r\n    }\r\n    onChangeDescription(e){\r\n        this.setState({\r\n            description:e.target.value\r\n        })\r\n    }\r\n    onChangeTaskHeading(e){\r\n        this.setState({\r\n            taskheading:e.target.value\r\n        })\r\n    }\r\n    onChangeStartDate(date){\r\n        this.setState({\r\n            startdate:date\r\n        })\r\n    }\r\n    onChangeDeadline(date){\r\n        this.setState({\r\n            deadline:date\r\n        })\r\n    }\r\n   \r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <h2 className=\"text-center\">Add New Task</h2>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label>User name:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.username} onChange={this.onChangeUsername} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Task heading</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.taskheading} onChange={this.onChangeTaskHeading} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Description:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.description} onChange={this.onChangeDescription} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Start date:</label> <br/>\r\n                        <DatePicker selected={this.state.startdate} onChange={this.onChangeStartDate}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Deadline:</label><br/>\r\n                        <DatePicker selected={this.state.deadline} onChange={this.onChangeDeadline} />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport Navbar from './components/navbar.component';\nimport AddTask from './components/addnewtask.component';\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <h1 className=\"text-center\">MERN Stack Todo App<br/> (under development)</h1>\n      <Route path=\"/todo/add\" component={AddTask}/>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}