{"version":3,"sources":["components/navbar.component.js","components/addtask.component.js","components/edittask.component.js","components/signup.component.js","components/side-nav.documents.components.js","components/documents.component.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","data-toggle","data-target","aria-controls","aria-expanded","id","AddTask","useState","username","setUsername","description","setDescription","heading","setHeading","Date","startdate","setStartdate","deadline","setDeadline","editpassword","setEditpassword","users","setUsers","useEffect","axios","get","then","res","data","length","catch","err","console","log","onSubmit","e","preventDefault","task","post","window","alert","required","value","onChange","target","map","user","key","type","rows","cols","selected","date","EditTask","taskheading","setTaskheading","Signup","email","setEmail","password","setPassword","location","minLength","SideNav","Documents","App","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c4e8fcc8.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap';\r\nimport 'jquery/dist/jquery.min.js';\r\n// import 'popper.js/dist/popper.js';\r\n\r\n\r\nexport default function Navbar(){\r\n\r\n        return(\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <Link to=\"/mern-crud-app/\" className=\"navbar-brand\">tradecoder</Link>\r\n            <button className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#main-menu\" aria-controls=\"main-menu\" aria-expanded=\"true\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div id=\"main-menu\" className=\"collapse navbar-collapse\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\"><Link to=\"/mern-crud-app/\" className=\"nav-link\">Todo List</Link></li>\r\n                    <li className=\"nav-item\"><Link to=\"/mern-crud-app/add/\" className=\"nav-link\">Add Task</Link></li>\r\n                    <li className=\"nav-item\"><Link to=\"/mern-crud-app/edit/\" className=\"nav-link\">Edit Task</Link></li>\r\n                    <li className=\"nav-item\"><Link to=\"/mern-crud-app/signup/\" className=\"nav-link\">Signup</Link></li>\r\n                    <li className=\"nav-item\"><Link to=\"/mern-crud-app/documents\" className=\"nav-link\">Documents</Link></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n        );    \r\n}","import React, {useState, useEffect} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport DatePicker from 'react-datepicker';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function AddTask (){\r\n   \r\n        const [username, setUsername]=useState(\"\");\r\n        const [description, setDescription]=useState(\"\");\r\n        const [heading, setHeading] = useState(\"\");\r\n        const [startdate, setStartdate]= useState(new Date());\r\n        const [deadline, setDeadline] = useState(new Date());\r\n        const [editpassword, setEditpassword]=useState(\"\");\r\n        const [users, setUsers]=useState([]);\r\n\r\n        useEffect(()=>{\r\n            axios.get('http://localhost:5000/users')\r\n            .then(res=>{\r\n                if(res.data.username.length>0){\r\n                    setUsers(res.data.username);\r\n                    username = res.data.username[0]\r\n                }\r\n            })\r\n            .catch(err=>console.log(err))\r\n\r\n        })\r\n\r\n        function  onChangeUsername(e){\r\n            setUsername(e.target.value)\r\n        }\r\n        \r\n        function onChangeDescription(e){\r\n            setDescription(e.target.value);\r\n        }\r\n        \r\n        function onChangeHeading(e){\r\n            setHeading(e.target.value)\r\n        }\r\n\r\n        function onChangeStartDate(date){\r\n            setStartdate(date)     \r\n         }\r\n\r\n         function onChangeDeadline(date){\r\n            setDeadline(date)\r\n        }\r\n        \r\n        function onChangeEditPassword(e){\r\n            setEditpassword(e.target.value)\r\n        }\r\n\r\n        function onSubmitTask(e){\r\n            e.preventDefault();\r\n            const task = {\r\n                username,\r\n                heading,\r\n                description,\r\n                startdate,\r\n                deadline,\r\n                editpassword\r\n            }\r\n\r\n            axios.post('http://localhost:5000/todos/add', task)\r\n            .then(()=>{\r\n                window.alert('New task added');\r\n                setUsername(\"\");\r\n                setHeading(\"\");\r\n                setDescription(\"\");\r\n                setStartdate(new Date());\r\n                setDeadline(new Date());\r\n                setEditpassword(\"\");\r\n            })\r\n            .catch(err=>window.alert(err));\r\n\r\n        }\r\n\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <h2 className=\"text-center\">Add New Task</h2>\r\n                <form onSubmit={onSubmitTask}>\r\n                    <div className=\"form-group\">\r\n                        <label>User name:</label>\r\n                       <select required className=\"form-control\" value={username} onChange={onChangeUsername}>\r\n                           {users.map(user=>{\r\n                               return (\r\n                               <option key={user} value={user}>{user}</option>\r\n                               )\r\n                           })}\r\n\r\n                       </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Task heading</label>\r\n                        <input type=\"text\" className=\"form-control\" value={heading} onChange={onChangeHeading} required />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Description:</label>\r\n                        <textarea rows=\"3\" cols=\"50\" className=\"form-control\" value={description} onChange={onChangeDescription} required></textarea>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Start date:</label> <br/>\r\n                        <DatePicker selected={startdate} onChange={onChangeStartDate}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Deadline:</label><br/>\r\n                        <DatePicker selected={deadline} onChange={onChangeDeadline} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Edit Password :</label>\r\n                        <input type=\"password\" className=\"form-control\" value={editpassword} onChange={onChangeEditPassword} required />\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n\r\n}   \r\n   \r\n","import React, {useState} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default function EditTask(){\r\n    \r\n    const [username]=useState(\"Registered User\");\r\n    const [taskheading, setTaskheading]= useState(\"\");\r\n    const [description, setDescription]= useState(\"\");\r\n    const [startdate, setStartdate]= useState(new Date());\r\n    const [deadline, setDeadline]= useState(new Date());\r\n    const [editpassword, setEditpassword]=useState(\"\");\r\n\r\n    function onChangeTaskHeading(e){\r\n        setTaskheading(e.target.value)\r\n    }\r\n\r\n    function onChangeDescription(e){\r\n        setDescription(e.target.value)\r\n    }\r\n\r\n    function onChangeStartDate(date){\r\n        setStartdate(date)\r\n    }\r\n\r\n    function onChangeDeadline(date){\r\n        setDeadline(date)\r\n    }\r\n\r\n    function onChangeEditPassword(e){\r\n        setEditpassword(e.target.value)\r\n    }\r\n\r\n    function onEditSubmit(e){\r\n        e.preventDefault();\r\n        // complete this function after the backend work\r\n\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <h2 className=\"text-center\">Edit Task</h2>\r\n            <form onSubmit={onEditSubmit}>\r\n                <div className=\"form-group\">\r\n                    <p>User name:<strong> {username} </strong> ** User_name not be changed</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                        <label>Task heading</label>\r\n                        <input type=\"text\" className=\"form-control\" value={taskheading} onChange={onChangeTaskHeading} required />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Description:</label>\r\n                        <textarea rows=\"3\" cols=\"50\" className=\"form-control\" value={description} onChange={onChangeDescription} required></textarea>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Start date:</label> <br/>\r\n                        <DatePicker selected={startdate} onChange={onChangeStartDate}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Deadline:</label><br/>\r\n                        <DatePicker selected={deadline} onChange={onChangeDeadline} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password (Edit password that you put while creating this task):</label>\r\n                        <input type=\"password\" className=\"form-control\" value={editpassword} onChange={onChangeEditPassword} required />\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                    </div>\r\n            </form>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\n\r\nexport default function Signup(){\r\n    \r\n    const [username, setUsername]=useState(\"\");\r\n    const [email, setEmail]=useState(\"\");\r\n    const [password, setPassword]=useState(\"\");\r\n\r\n\r\n    function onChangeUsername(e){\r\n        setUsername(e.target.value)\r\n    }\r\n\r\n    function onChangeEmail(e){\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    function onChangePassword(e){\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    function onSubmitUserInfo(e){\r\n        e.preventDefault();\r\n        const user = {\r\n            username:username,\r\n            email:email,\r\n            password:password\r\n        }\r\n        axios.post('http://localhost:5000/users/signup', user)\r\n        .then(res=>{\r\n            setUsername(\"\");\r\n            setEmail(\"\")\r\n            setPassword(\"\"); \r\n            window.alert(res.data);\r\n            window.location = ('/mern-crud-app/add/');\r\n        })\r\n        .catch(err=>window.alert('Either username or email is already registered with us, or email address is incorrect,  try with different one'));        \r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Signup</h2>\r\n            <form onSubmit={onSubmitUserInfo}>\r\n                <div className=\"form-group\">\r\n                    <label>User name:</label>\r\n                    <input type=\"text\" minLength=\"5\" className=\"form-control\" value={username} onChange={onChangeUsername} required/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>User email:</label>\r\n                    <input type=\"text\" minLength=\"8\" className=\"form-control\" value={email} onChange={onChangeEmail} required/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>User password:</label>\r\n                    <input type=\"text\" minLength=\"8\" className=\"form-control\" value={password} onChange={onChangePassword} required/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                </div>\r\n\r\n            </form>\r\n\r\n        </div>        \r\n    );\r\n}\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\n\r\n\r\nexport default function SideNav(){\r\n    return(\r\n        <div className=\"side-nav\">\r\n            <button className=\"btn btn-default\" >Introduction</button>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport SideNav from './side-nav.documents.components';\r\n\r\nexport default function Documents(){\r\n    return(\r\n        <div className=\"container\">\r\n            <h1 className=\"text-center\">Documents for a MERN Stack CRUD app</h1>\r\n            <div>\r\n                <SideNav />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navbar from './components/navbar.component';\r\nimport AddTask from './components/addtask.component';\r\nimport EditTask from './components/edittask.component';\r\nimport Signup from './components/signup.component';\r\nimport Documents from './components/documents.component';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <h1 className=\"text-center\">MERN Stack Todo App<br/> (under development)</h1>\r\n      <Route path=\"/mern-crud-app/add\" component={AddTask}/>\r\n      <Route path=\"/mern-crud-app/edit\" component={EditTask}/>\r\n      <Route path=\"/mern-crud-app/signup\" component={Signup}/>\r\n      <Route path=\"/mern-crud-app/documents\" component={Documents}/>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}